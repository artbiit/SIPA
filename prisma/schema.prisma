generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "mysql"
  url               = env("DB_URL")
  shadowDatabaseUrl = env("SHADOW_DB_URL")
}

model Athlete {
  id                              Int                 @id @default(autoincrement())
  athleteName                     String              @db.VarChar(10)
  speed                           Int
  scoringAbility                  Int
  power                           Int
  defence                         Int
  stamina                         Int
  athleteType                     Athlete_athleteType
  spawnRate                       Int
  MyTeam_MyTeam_attackerToAthlete MyTeam[]            @relation("MyTeam_attackerToAthlete")
  MyTeam_MyTeam_defenderToAthlete MyTeam[]            @relation("MyTeam_defenderToAthlete")
  MyTeam_MyTeam_middleToAthlete   MyTeam[]            @relation("MyTeam_middleToAthlete")
  UsersAthlete                    UsersAthlete[]
}

model MMR {
  id        Int      @id @default(autoincrement())
  userId    Int      @unique
  score     Int
  createdAt DateTime @default(now())
  Users     Users    @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model MyTeam {
  id                               Int      @id @default(autoincrement())
  userId                           Int      @unique
  attacker                         Int
  defender                         Int
  middle                           Int
  createdAt                        DateTime @default(now())
  Athlete_MyTeam_attackerToAthlete Athlete  @relation("MyTeam_attackerToAthlete", fields: [attacker], references: [id])
  Athlete_MyTeam_defenderToAthlete Athlete  @relation("MyTeam_defenderToAthlete", fields: [defender], references: [id])
  Athlete_MyTeam_middleToAthlete   Athlete  @relation("MyTeam_middleToAthlete", fields: [middle], references: [id])
  Users                            Users    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([attacker], map: "MyTeam_attacker_fkey")
  @@index([defender], map: "MyTeam_defender_fkey")
  @@index([middle], map: "MyTeam_middle_fkey")
  @@index([userId])
}

model Users {
  id           Int            @id @default(autoincrement())
  userId       String         @unique @db.VarChar(15)
  password     String         @db.VarChar(15)
  userName     String         @db.VarChar(16)
  cash         Int            @default(0)
  createdAt    DateTime       @default(now())
  MMR          MMR?
  MyTeam       MyTeam?
  UsersAthlete UsersAthlete[]
}

model UsersAthlete {
  id        Int      @id @default(autoincrement())
  userId    Int
  athleteId Int
  enhance   Int
  createdAt DateTime @default(now())
  Athlete   Athlete  @relation(fields: [athleteId], references: [id])
  Users     Users    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([athleteId], map: "UsersAthlete_athleteId_fkey")
  @@index([userId], map: "UsersAthlete_userId_fkey")
}

enum Athlete_athleteType {
  ATTACKER
  DEFENDER
  MIDDLE
}
